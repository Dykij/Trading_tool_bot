name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-docstrings black isort
          pip install -r requirements.txt
          
      - name: Run flake8
        run: |
          flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
          
      - name: Run black
        run: |
          black --check .
          
      - name: Run isort
        run: |
          isort --check-only --profile black .

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          python -m pytest tests/ --cov=. --cov-report=xml
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          
  validate_code:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mypy pylint
          pip install -r requirements.txt
          
      - name: Run mypy
        continue-on-error: true
        run: |
          mypy --config-file=mypy.ini .
          
      - name: Run pylint
        continue-on-error: true
        run: |
          pylint --rcfile=.pylintrc --output-format=text *.py utils/ models/ tests/

  build_docs:
    runs-on: ubuntu-latest
    needs: validate_code
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx_rtd_theme
          pip install -r requirements.txt
          
      - name: Build documentation
        run: |
          mkdir -p docs/build
          sphinx-build -b html docs/source docs/build
          
      - name: Upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: docs/build 