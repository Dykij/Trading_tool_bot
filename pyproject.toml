[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dmarket_trading_bot"
version = "0.1.0"
description = "Trading bot for DMarket platform with ML-based price prediction"
authors = [
  { name="DMarket Bot Team" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
]
requires-python = ">=3.8"
dependencies = [
    "pandas",
    "numpy",
    "scikit-learn",
    "matplotlib",
    "requests",
    "aiohttp",
    "joblib",
    "pyyaml",
    "python-dotenv",
    "python-telegram-bot",
    "redis",
    "cryptography",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "autopep8",
    "flake8",
    "black",
    "isort",
    "mypy",
]

[project.scripts]
dmarket-bot = "src.cli.cli:main"

[tool.pyright]
# Общие настройки
typeCheckingMode = "basic"
useLibraryCodeForTypes = true
reportMissingImports = false
reportMissingModuleSource = false
reportMissingTypeStubs = false
reportPrivateImportUsage = false

# Настройки для Jupyter Notebooks
pythonVersion = "3.11"
extraPaths = ["./dmarket_bot_env/Lib/site-packages"]

[tool.pylance]
reportAssignmentType = false
reportReturnType = false
reportGeneralTypeIssues = "warning"
reportMissingTypeStubs = false

[tool.black]
line-length = 120
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | dmarket_bot_env
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
skip_glob = ["**/.venv/*", "**/dmarket_bot_env/*"]

[tool.flake8]
max-line-length = 120
exclude = [".git", "__pycache__", "*.pyc", ".venv", "dmarket_bot_env"]
ignore = ["E203", "E501", "W503"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"

[tool.pylint.'MESSAGES CONTROL']
disable = "missing-docstring,invalid-name"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.'MASTER']
load-plugins = "pylint_django"
django-settings-module = "config.settings"

[tool.coverage.run]
source = ["."] # Указываем исходники для измерения покрытия
